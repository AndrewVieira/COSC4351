{"version":3,"sources":["store/actions/Auth.js","store/actions/ActionTypes.js","pages/Login.js","components/AdminLink.js","pages/Portal.js","pages/PlaceHolder.js","components/LogoutButton.js","App.js","serviceWorker.js","store/Utility.js","store/reducers/Auth.js","index.js"],"names":["authSuccess","token","type","authFail","error","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","authCheckState","getItem","undefined","expirationDate","Date","getTime","Login","props","onChange","event","name","target","value","setState","onSubmit","preventDefault","state","username","errorShow","errorTitle","errorBody","password","onAuth","console","log","handleErrorClose","handleErrorShow","this","history","push","className","Form","Group","controlId","Label","Control","placeholder","Button","variant","onClick","Modal","show","onHide","backdrop","keyboard","centered","Header","closeButton","Title","Body","Footer","React","Component","connect","loading","axios","post","then","res","data","key","setItem","catch","err","window","alert","response","non_field_errors","actions","AdminLink","Card","style","margin","bg","text","class","href","link","Text","Portal","componentDidMount","a","isLoggedIn","defaults","headers","Authorization","get","list","links","map","index","url","PlaceHolder","onBack","title","alignItems","useHistory","Hoc","children","App","Main","Navbar","Brand","Nav","exact","path","component","render","onTryAutoSignup","isAuthenticated","Boolean","location","hostname","match","UpdateObject","oldObject","updatedProperties","initialState","authStart","action","authLogout","reducer","composeEnhances","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.5cd8fb87.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const authStart = () => {\r\n\treturn {\r\n\t\ttype: ActionTypes.AUTH_START\r\n\t}\r\n}\r\n\r\nexport const authSuccess = token => {\r\n\treturn {\r\n\t\ttype: ActionTypes.AUTH_SUCCESS,\r\n\t\ttoken: token,\r\n\t}\r\n}\r\n\r\nexport const authFail = error => {\r\n\treturn {\r\n\t\ttype: ActionTypes.AUTH_FAIL,\r\n\t\terror: error\r\n\t}\r\n}\r\n\r\nexport const logout = () => {\r\n\tlocalStorage.removeItem('user');\r\n\tlocalStorage.removeItem('expirationDate');\r\n\treturn {\r\n\t\ttype: ActionTypes.AUTH_LOGOUT\r\n\t}\r\n}\r\n\r\nexport const checkAuthTimeout = expirationTime => {\r\n\treturn dispatch => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tdispatch(logout());\r\n\t\t}, expirationTime * 1000)\r\n\t}\r\n}\r\n\r\nexport const authLogin = (username, password) => {\r\n\treturn dispatch => {\r\n\t\tdispatch(authStart());\r\n\t\taxios.post('http://localhost:8080/rest-auth/login/', {\r\n\t\t\tusername: username,\r\n\t\t\tpassword: password\r\n\t\t})\r\n\t\t.then(res => {\r\n\t\t\t//console.log(res);\r\n\t\t\tconst token = res.data.key;\r\n\t\t\tconst expirationDate = new Date(new Date().getTime() + 3600 * 1000);\r\n\t\t\tlocalStorage.setItem('token', token);\r\n\t\t\tlocalStorage.setItem('expirationDate', expirationDate);\r\n\t\t\tdispatch(authSuccess(token));\r\n\t\t\tdispatch(checkAuthTimeout(3600));\r\n\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tdispatch(authFail(err));\r\n\t\t\t//console.log(err.response);\r\n\t\t\twindow.alert(err.response.data.non_field_errors[0]);\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport const authRegistration = (username, password1, password2) => {\r\n\treturn dispatch => {\r\n\t\tdispatch(authStart());\r\n\t\taxios.post('http://localhost:8080/rest-auth/registration/', {\r\n\t\t\tusername: username,\r\n\t\t\tpassword1: password1,\r\n\t\t\tpassword2: password2\r\n\t\t})\r\n\t\t.then(res => {\r\n\t\t\tconst token = res.data.key;\r\n\t\t\tconst expirationDate = new Date(new Date().getTime() + 3600 * 1000);\r\n\t\t\tlocalStorage.setItem('token', token);\r\n\t\t\tlocalStorage.setItem('expirationDate', expirationDate);\r\n\t\t\tdispatch(authSuccess(token));\r\n\t\t\tdispatch(checkAuthTimeout(3600));\r\n\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tdispatch(authFail(err));\r\n\t\t\twindow.alert('Error creating account: most likely your username is already in use, or your password is not complex enough.')\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport const authCheckState = () => {\r\n\treturn dispatch => {\r\n\t\tconst token = localStorage.getItem('token');\r\n\t\tif (token === undefined){\r\n\t\t\tdispatch(logout());\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n\t\t\tif (expirationDate <= new Date()) {\r\n\t\t\t\tdispatch(logout());\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdispatch(authSuccess(token));\r\n\t\t\t\tdispatch(checkAuthTimeout( (expirationDate.getTime() - new Date().getTime()) / 1000) );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","export const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';","import React from 'react';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../store/actions/Auth';\r\n\r\nclass Login extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tusername: '',\r\n\t\t\tpassword: '',\r\n\r\n\t\t\terrorShow: false,\r\n\t\t\terrorTitle: 'Generic Error',\r\n\t\t\terrorBody: 'This is a generic error!'\r\n\t\t}\r\n\t}\r\n\r\n\tonChange = (event) => {\r\n\t\tconst name = event.target.name;\r\n\t\tconst value = event.target.value;\r\n\t\tthis.setState({[name]: value},);\r\n\t}\r\n\r\n\tonSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tif (this.state.username==='')\r\n\t\t{\r\n\t\t\tthis.setState({\r\n\t\t\t\terrorShow: true,\r\n\t\t\t\terrorTitle: \"Username Error\",\r\n\t\t\t\terrorBody: \"Please enter your username!\",\r\n\t\t\t});\r\n\t\t}\r\n\t\telse if (this.state.password==='')\r\n\t\t{\r\n\t\t\tthis.setState({\r\n\t\t\t\terrorShow: true,\r\n\t\t\t\terrorTitle: \"Password Error\",\r\n\t\t\t\terrorBody: \"Please enter your password!\",\r\n\t\t\t});\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t//console.log(\"I tried to log in\");\r\n\t\t\tthis.props.onAuth(this.state.username, this.state.password);\r\n\r\n\t\t\tif (this.props.error !== null)\r\n\t\t\t{\r\n\t\t\t\tconsole.log(this.props.error);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (false) //Place holder for error from backend\r\n\t\t{\r\n\r\n\t\t}\r\n\t}\r\n\r\n\thandleErrorClose = () => {\r\n\t\tthis.setState({\r\n\t\t\terrorShow: false,\r\n\t\t});\r\n\t}\r\n\r\n\thandleErrorShow = () => {\r\n\t\t\tthis.setState({\r\n\t\t\terrorShow: true,\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.props.token){\r\n\t\t\tthis.props.history.push('/portal');\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div className=\"login center\">\r\n\t\t\t\t<div className=\"container center_div w-50 align-items-center focus\">\r\n\t\t\t\t\t<h1>Login Page</h1>\r\n\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t<Form.Group controlId=\"formUsername\">\r\n\t\t\t\t\t\t\t<Form.Label>Username</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control name=\"username\" type=\"username\" placeholder=\"Enter username\" value={this.state.username} onChange={this.onChange}/>\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t<Form.Group controlId=\"formUsername\">\r\n\t\t\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control name=\"password\" type=\"password\" placeholder=\"Enter password\" value={this.state.password} onChange={this.onChange}/>\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t<Button variant=\"primary\" type=\"submit\" onClick={this.onSubmit}>Login</Button>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<Modal show={this.state.errorShow} onHide={this.handleErrorClose} backdrop=\"static\" keyboard={false} centered>\r\n\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t<Modal.Title>{this.state.errorTitle}</Modal.Title>\r\n\t\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t<p>{this.state.errorBody}</p>\r\n\t\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t  <Modal.Footer>\r\n\t\t\t\t    <Button variant=\"secondary\" onClick={this.handleErrorClose}>Close</Button>\r\n\t\t\t\t  </Modal.Footer>\r\n\t\t\t\t</Modal>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\ttoken: state.token,\r\n\t\tloading: state.loading,\r\n\t\terror: state.error\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tonAuth: (username, password) => dispatch(actions.authLogin(username, password))\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React from 'react';\r\n\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nexport default class AdminLink extends React.Component {\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t\r\n\t\t\t\t<Card style={{margin : '1rem'}} bg='light' text='black'>\r\n\t\t\t\t\t<div class=\"shadow\">\r\n\t\t\t\t\t\t<a href={this.props.link}>\r\n\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t<Card.Title>{this.props.name}</Card.Title>\r\n\t\t\t\t\t\t\t\t<Card.Text>{this.props.link}</Card.Text>\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Card>\r\n\t\t\t\r\n\t\t)\r\n\t}\r\n}","import React from 'react';\r\nimport AdminLink from '../components/AdminLink';\r\n\r\nimport axios from 'axios';\r\n\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../store/actions/Auth';\r\n\r\n\r\nclass Portal extends React.Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tlinks: [],\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount = async () => {\r\n\t\t//Make sure we are logged in\r\n\t\t//If not logged in, return to the home page\r\n\t\tawait this.props.isLoggedIn();\r\n\r\n\t\tif (!this.props.token) {\r\n\t\t\tthis.props.history.push('/');\r\n\t\t}\r\n\t\telse{\r\n\t\t\t//Retrieve the links from the backend\r\n\t\t\taxios.defaults.headers = {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAuthorization: `Token ${this.props.token}`\r\n\t\t\t};\r\n\r\n\t\t\taxios\r\n\t\t\t\t.get(`http://localhost:8080/portal/api/links`)\r\n\t\t\t\t.then(res => {\r\n\t\t\t\t\tconst list = res.data;\r\n\t\t\t\t\tconsole.log(res.data);\r\n\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tlinks: list,\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.catch(err => {\r\n\t\t\t\t\twindow.alert(err);\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"portal center\">\r\n\t\t\t\t<div className=\"container center_div w-50 focus\">\r\n\t\t\t\t\t\t<h1>Portal Page</h1>\r\n\t\t\t\t\t\t<div class=\"adminlinks\">\r\n\t\t\t\t\t\t\t{this.state.links.map((value,index) => {\r\n\t                            return (\r\n\t                            \t<AdminLink key={index} name= {value.name} link={value.url}/>\r\n\t                            );\r\n\t                        })}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\ttoken: state.token,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        isLoggedIn: () => dispatch(actions.authCheckState()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Portal);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Button from 'react-bootstrap/Button';\r\nimport * as actions from '../store/actions/Auth';\r\n\r\nclass PlaceHolder extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\tcomponentDidMount = async () => {\r\n\t\t//Make sure we are logged in\r\n\t\t//If not logged in, return to the home page\r\n\t\tawait this.props.isLoggedIn();\r\n\r\n\t\tif (!this.props.token) {\r\n\t\t\tthis.props.history.push('/');\r\n\t\t}\r\n\t}\r\n\r\n\tonBack = (event) => {\r\n\t\tthis.props.history.push('/portal');\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"placeholder center\">\r\n\t\t\t\t<div className=\"container center_div w-50 focus text-center\">\r\n\t\t\t\t\t<h1>{this.props.title}</h1>\r\n\t\t\t\t\t<Button className=\"w-50\" alignItems=\"center\" type=\"submit\" variant=\"primary\" onClick={this.onBack}>Return to Portal</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\ttoken: state.token,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        isLoggedIn: () => dispatch(actions.authCheckState()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PlaceHolder);","import React from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport * as actions from '../store/actions/Auth';\r\n\r\nfunction LogoutButton ({token, logout}) {\r\n  const history = useHistory();\r\n\r\n  function handleClick() {\r\n    logout();\r\n    history.push(\"/\");\r\n  }\r\n\r\n  if (token){\r\n    return (<Button type=\"submit\" variant=\"light\" onClick={handleClick}>Log Out</Button>);\r\n  }\r\n  else{\r\n    return (null);\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    token: state.token,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    logout: () => dispatch(actions.logout()),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LogoutButton)","import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\n\r\nimport Login from './pages/Login';\r\nimport Portal from './pages/Portal';\r\nimport PlaceHolder from './pages/PlaceHolder';\r\n\r\nimport LogoutButton from './components/LogoutButton';\r\n\r\nimport * as actions from './store/actions/Auth';\r\nconst Hoc = props => props.children;\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    this.props.onTryAutoSignup();\r\n  }\r\n\r\n  Main = () => {\r\n    return (\r\n      <div className=\"App\">\r\n          <Navbar bg=\"primary\" variant=\"dark\">\r\n            <Navbar.Brand href='/'>Admin Portal</Navbar.Brand>\r\n            <Nav className=\"ml-auto\">\r\n            </Nav>\r\n            <Nav className=\"ml-auto\">\r\n              <LogoutButton className=\"mr-auto\"/>\r\n            </Nav>\r\n          </Navbar>\r\n\r\n          <Hoc>\r\n            <Route exact path='/' component={Login}/>\r\n            <Route exact path='/portal' component={Portal}/>\r\n\r\n            <Route exact path='/help_desk' render={(props) => (<PlaceHolder {...props} title=\"Help Desk\"/>)}/>\r\n            <Route exact path='/finance_reports' render={(props) => (<PlaceHolder {...props} title=\"Finance Reports\"/>)}/>\r\n            <Route exact path='/accounts_payable' render={(props) => (<PlaceHolder {...props} title=\"Accounts Payable\"/>)}/>\r\n            <Route exact path='/accounts_recievable' render={(props) => (<PlaceHolder {...props} title=\"Accounts Recievable\"/>)}/>\r\n            <Route exact path='/tax' render={(props) => (<PlaceHolder {...props} title=\"Tax\"/>)}/>\r\n            <Route exact path='/sales_reports' render={(props) => (<PlaceHolder {...props} title=\"Sales Reports\"/>)}/>\r\n            <Route exact path='/sales_leads' render={(props) => (<PlaceHolder {...props} title=\"Sales Leads\"/>)}/>\r\n            <Route exact path='/sales_demo' render={(props) => (<PlaceHolder {...props} title=\"Sales Demo\"/>)}/>\r\n            <Route exact path='/new_hire' render={(props) => (<PlaceHolder {...props} title=\"New Hire On-Boarding\"/>)}/>\r\n            <Route exact path='/benefits' render={(props) => (<PlaceHolder {...props} title=\"Benefits\"/>)}/>\r\n            <Route exact path='/payroll' render={(props) => (<PlaceHolder {...props} title=\"Payroll\"/>)}/>\r\n            <Route exact path='/off_boarding' render={(props) => (<PlaceHolder {...props} title=\"Off-Boarding\"/>)}/>\r\n            <Route exact path='/hr_reports' render={(props) => (<PlaceHolder {...props} title=\"HR Reports\"/>)}/>\r\n            <Route exact path='/application_monitoring' render={(props) => (<PlaceHolder {...props} title=\"Application Monitoring\"/>)}/>\r\n            <Route exact path='/tech_support' render={(props) => (<PlaceHolder {...props} title=\"Tech Support\"/>)}/>\r\n            <Route exact path='/app_development' render={(props) => (<PlaceHolder {...props} title=\"App Development\"/>)}/>\r\n            <Route exact path='/app_admin' render={(props) => (<PlaceHolder {...props} title=\"App Admin\"/>)}/>\r\n            <Route exact path='/release_management' render={(props) => (<PlaceHolder {...props} title=\"Release Management\"/>)}/>\r\n          </Hoc>\r\n      </div>\r\n\r\n    );\r\n  }\r\n\r\n  /*\r\n    <Navbar bg=\"light\" variant=\"light\" fixed=\"bottom\">\r\n      <Nav className=\"m-auto\">\r\n          <div className=\"text-center\" text-align=\"center\" width=\"100%\"> \r\n            <p>COSC 4351 Project - By Carroll Vance, Andrew Vieira, and Jerrin Wiley</p>\r\n          </div>\r\n      </Nav>\r\n    </Navbar>  \r\n  */\r\n\r\n  render() { return (\r\n      <div className=\"App\" >\r\n        <this.Main{...this.props}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.token !== null\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onTryAutoSignup: () => dispatch(actions.authCheckState()),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","export const UpdateObject = (oldObject, updatedProperties) => {\r\n\treturn {\r\n\t\t...oldObject,\r\n\t\t...updatedProperties\r\n\t}\r\n}","import * as ActionTypes from '../actions/ActionTypes';\r\nimport { UpdateObject } from '../Utility';\r\n\r\nconst initialState = {\r\n\ttoken: null,\r\n\terror: null,\r\n\tloading: false\r\n}\r\n\r\nconst authStart = (state, action) => {\r\n\treturn UpdateObject(state, {\r\n\t\terror: null,\r\n\t\tloading: true\r\n\t});\r\n}\r\n\r\nconst authSuccess = (state, action) => {\r\n\treturn UpdateObject(state, {\r\n\t\ttoken: action.token,\r\n\t\terror: null,\r\n\t\tloading: false\r\n\t});\r\n}\r\n\r\nconst authFail = async (state, action) => {\r\n\treturn await UpdateObject(state, {\r\n\t\terror: action.error,\r\n\t\tloading: false\r\n\t});\r\n}\r\n\r\nconst authLogout = (state, action) => {\r\n\treturn UpdateObject(state, {\r\n\t\ttoken: null\r\n\t});\r\n}\r\n\r\nconst reducer = (state=initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase ActionTypes.AUTH_START: return authStart(state, action);\r\n\t\tcase ActionTypes.AUTH_SUCCESS: return authSuccess(state, action);\r\n\t\tcase ActionTypes.AUTH_FAIL: return authFail(state, action);\r\n\t\tcase ActionTypes.AUTH_LOGOUT: return authLogout(state, action);\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {createStore, compose, applyMiddleware} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport reducer from './store/reducers/Auth';\r\n\r\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducer, composeEnhances(\r\n\tapplyMiddleware(thunk)\r\n));\r\n\r\nReactDOM.render(\r\n\t(<Provider store={store}>\r\n\t  <BrowserRouter>\r\n\t    <App />\r\n\t  </BrowserRouter>,\r\n\t</Provider>),\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}